"""empty message

Revision ID: 3c14e2b84c5f
Revises:
Create Date: 2023-03-04 15:16:03.341469

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '3c14e2b84c5f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # if environment == "production":
    #     op.execute(f"DROP SCHEMA IF EXISTS {SCHEMA} CASCADE;")
    #     op.execute(f"CREATE SCHEMA {SCHEMA};")
    #     op.execute(f"SET search_path TO {SCHEMA},public;")

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('preview_image', sa.String(length=1000), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('developer', sa.String(length=255), nullable=False),
    sa.Column('genre', sa.String(length=255), nullable=False),
    sa.Column('platform', sa.String(length=255), nullable=False),
    sa.Column('preview_images', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE games SET SCHEMA {SCHEMA};")

    op.create_table('preview_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1000), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE preview_images SET SCHEMA {SCHEMA};")

    op.create_table('game_preview_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('preview_image_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['preview_image_id'], ['preview_images.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE game_preview_images SET SCHEMA {SCHEMA};")

    # op.create_table('lists',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('user_id', sa.Integer(), nullable=False),
    # sa.Column('list_name', sa.String(length=255), nullable=False),
    # sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # if environment == "production":
    #     op.execute(f"ALTER TABLE lists SET SCHEMA {SCHEMA};")

    # op.create_table('game_lists',
    # sa.Column('lists', sa.Integer(), nullable=False),
    # sa.Column('games', sa.Integer(), nullable=False),
    # sa.ForeignKeyConstraint(['games'], ['games.id'], ),
    # sa.ForeignKeyConstraint(['lists'], ['lists.id'], ),
    # sa.PrimaryKeyConstraint('lists', 'games')
    # )
    # if environment == "production":
    #     op.execute(f"ALTER TABLE game_lists SET SCHEMA {SCHEMA};")

    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.String(length=1000), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    # op.drop_table('game_lists')
    op.drop_table('lists')
    op.drop_table('games')
    op.drop_table('users')
    # ### end Alembic commands ###
